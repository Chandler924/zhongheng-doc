import{_ as n,c as a,a as e,o as i}from"./app-qReW-CvS.js";const l={};function p(c,s){return i(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="系统架构" tabindex="-1"><a class="header-anchor" href="#系统架构"><span>系统架构</span></a></h1><p>纵横前端框架采用现代化的架构设计，基于 Vue 3 + TypeScript + Vite 构建，提供完整的开发解决方案。</p><h2 id="整体架构" tabindex="-1"><a class="header-anchor" href="#整体架构"><span>整体架构</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">┌─────────────────────────────────────────────────────────────┐</span>
<span class="line">│                    纵横前端框架架构                            │</span>
<span class="line">├─────────────────────────────────────────────────────────────┤</span>
<span class="line">│  应用层 (Application Layer)                                 │</span>
<span class="line">│  ┌─────────────┐ ┌─────────────┐ ┌─────────────┐           │</span>
<span class="line">│  │   业务组件   │ │   页面组件   │ │   布局组件   │           │</span>
<span class="line">│  └─────────────┘ └─────────────┘ └─────────────┘           │</span>
<span class="line">├─────────────────────────────────────────────────────────────┤</span>
<span class="line">│  组件层 (Component Layer)                                   │</span>
<span class="line">│  ┌─────────────┐ ┌─────────────┐ ┌─────────────┐           │</span>
<span class="line">│  │  基础组件    │ │  业务组件    │ │  复合组件    │           │</span>
<span class="line">│  └─────────────┘ └─────────────┘ └─────────────┘           │</span>
<span class="line">├─────────────────────────────────────────────────────────────┤</span>
<span class="line">│  服务层 (Service Layer)                                     │</span>
<span class="line">│  ┌─────────────┐ ┌─────────────┐ ┌─────────────┐           │</span>
<span class="line">│  │  API服务    │ │  状态管理    │ │  工具服务    │           │</span>
<span class="line">│  └─────────────┘ └─────────────┘ └─────────────┘           │</span>
<span class="line">├─────────────────────────────────────────────────────────────┤</span>
<span class="line">│  基础层 (Foundation Layer)                                  │</span>
<span class="line">│  ┌─────────────┐ ┌─────────────┐ ┌─────────────┐           │</span>
<span class="line">│  │  Vue 3      │ │  TypeScript │ │  Vite       │           │</span>
<span class="line">│  └─────────────┘ └─────────────┘ └─────────────┘           │</span>
<span class="line">└─────────────────────────────────────────────────────────────┘</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="技术栈" tabindex="-1"><a class="header-anchor" href="#技术栈"><span>技术栈</span></a></h2><h3 id="核心框架" tabindex="-1"><a class="header-anchor" href="#核心框架"><span>核心框架</span></a></h3><ul><li><strong>Vue 3</strong> - 渐进式 JavaScript 框架</li><li><strong>TypeScript</strong> - 类型安全的 JavaScript 超集</li><li><strong>Vite</strong> - 下一代前端构建工具</li></ul><h3 id="状态管理" tabindex="-1"><a class="header-anchor" href="#状态管理"><span>状态管理</span></a></h3><ul><li><strong>Pinia</strong> - Vue 3 官方推荐的状态管理库</li><li><strong>Vuex</strong> - 传统状态管理方案（可选）</li></ul><h3 id="ui-框架" tabindex="-1"><a class="header-anchor" href="#ui-框架"><span>UI 框架</span></a></h3><ul><li><strong>Element Plus</strong> - 基于 Vue 3 的组件库</li><li><strong>自定义组件</strong> - 纵横框架业务组件</li></ul><h3 id="开发工具" tabindex="-1"><a class="header-anchor" href="#开发工具"><span>开发工具</span></a></h3><ul><li><strong>ESLint</strong> - 代码质量检查</li><li><strong>Prettier</strong> - 代码格式化</li><li><strong>Husky</strong> - Git hooks 管理</li><li><strong>Commitizen</strong> - 规范化提交信息</li></ul><h2 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构"><span>目录结构</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">src/</span>
<span class="line">├── components/          # 组件目录</span>
<span class="line">│   ├── base/           # 基础组件</span>
<span class="line">│   ├── business/       # 业务组件</span>
<span class="line">│   └── layout/         # 布局组件</span>
<span class="line">├── views/              # 页面视图</span>
<span class="line">├── router/             # 路由配置</span>
<span class="line">├── stores/             # 状态管理</span>
<span class="line">├── services/           # API 服务</span>
<span class="line">├── utils/              # 工具函数</span>
<span class="line">├── types/              # TypeScript 类型定义</span>
<span class="line">├── styles/             # 样式文件</span>
<span class="line">└── assets/             # 静态资源</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设计原则" tabindex="-1"><a class="header-anchor" href="#设计原则"><span>设计原则</span></a></h2><h3 id="_1-组件化设计" tabindex="-1"><a class="header-anchor" href="#_1-组件化设计"><span>1. 组件化设计</span></a></h3><ul><li>单一职责原则</li><li>可复用性</li><li>可维护性</li><li>可测试性</li></ul><h3 id="_2-类型安全" tabindex="-1"><a class="header-anchor" href="#_2-类型安全"><span>2. 类型安全</span></a></h3><ul><li>全面的 TypeScript 支持</li><li>严格的类型检查</li><li>智能提示和自动补全</li></ul><h3 id="_3-性能优化" tabindex="-1"><a class="header-anchor" href="#_3-性能优化"><span>3. 性能优化</span></a></h3><ul><li>按需加载</li><li>代码分割</li><li>懒加载路由</li><li>组件缓存</li></ul><h3 id="_4-开发体验" tabindex="-1"><a class="header-anchor" href="#_4-开发体验"><span>4. 开发体验</span></a></h3><ul><li>热重载</li><li>快速构建</li><li>丰富的开发工具</li><li>完善的错误提示</li></ul><h2 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践"><span>最佳实践</span></a></h2><h3 id="组件开发" tabindex="-1"><a class="header-anchor" href="#组件开发"><span>组件开发</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// 组件定义</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  name<span class="token operator">:</span> <span class="token string">&#39;ZComponent&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  props<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 属性定义</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  emits<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 事件定义</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">setup</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> <span class="token punctuation">{</span> emit <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 组件逻辑</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 暴露给模板的数据和方法</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="状态管理-1" tabindex="-1"><a class="header-anchor" href="#状态管理-1"><span>状态管理</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// Store 定义</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> useAppStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;app&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function-variable function">state</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 状态定义</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  getters<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 计算属性</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  actions<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 方法定义</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="api-服务" tabindex="-1"><a class="header-anchor" href="#api-服务"><span>API 服务</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token comment">// API 服务定义</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ApiService</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> baseURL<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  </span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span>baseURL<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>baseURL <span class="token operator">=</span> baseURL</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">async</span> <span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// API 调用逻辑</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="扩展性" tabindex="-1"><a class="header-anchor" href="#扩展性"><span>扩展性</span></a></h2><h3 id="插件系统" tabindex="-1"><a class="header-anchor" href="#插件系统"><span>插件系统</span></a></h3><ul><li>支持自定义插件</li><li>插件生命周期管理</li><li>插件间通信机制</li></ul><h3 id="主题系统" tabindex="-1"><a class="header-anchor" href="#主题系统"><span>主题系统</span></a></h3><ul><li>CSS 变量支持</li><li>动态主题切换</li><li>组件样式定制</li></ul><h3 id="国际化" tabindex="-1"><a class="header-anchor" href="#国际化"><span>国际化</span></a></h3><ul><li>多语言支持</li><li>动态语言切换</li><li>本地化资源管理</li></ul><h2 id="部署架构" tabindex="-1"><a class="header-anchor" href="#部署架构"><span>部署架构</span></a></h2><h3 id="开发环境" tabindex="-1"><a class="header-anchor" href="#开发环境"><span>开发环境</span></a></h3><ul><li>本地开发服务器</li><li>热重载支持</li><li>开发工具集成</li></ul><h3 id="生产环境" tabindex="-1"><a class="header-anchor" href="#生产环境"><span>生产环境</span></a></h3><ul><li>静态资源构建</li><li>CDN 加速</li><li>缓存策略</li><li>监控和日志</li></ul><h2 id="未来规划" tabindex="-1"><a class="header-anchor" href="#未来规划"><span>未来规划</span></a></h2><h3 id="短期目标" tabindex="-1"><a class="header-anchor" href="#短期目标"><span>短期目标</span></a></h3><ul><li>完善组件库</li><li>优化构建性能</li><li>增强开发工具</li></ul><h3 id="长期目标" tabindex="-1"><a class="header-anchor" href="#长期目标"><span>长期目标</span></a></h3><ul><li>微前端架构支持</li><li>服务端渲染 (SSR)</li><li>移动端适配</li><li>跨平台支持</li></ul>`,48)])])}const r=n(l,[["render",p]]),o=JSON.parse('{"path":"/frontend/architecture/overview.html","title":"系统架构","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1758160564000,"contributors":[{"name":"TianYu","username":"TianYu","email":"tianyu@zt.com.cn","commits":1,"url":"https://github.com/TianYu"}],"changelog":[{"hash":"b2f79265a76dc81d847dac3edc1bd06b4612beee","time":1758160564000,"email":"tianyu@zt.com.cn","author":"TianYu","message":"fix: 更新文档内容"}]},"filePathRelative":"frontend/architecture/overview.md"}');export{r as comp,o as data};
